//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Threading;
using System.Threading.Tasks;
using ClickUp.Api.Client.Models; // Assuming models will be in this namespace
// Assuming request models will be in a sub-namespace or similar
// using ClickUp.Api.Client.Models.Requests;

namespace ClickUp.Api.Client.Abstractions
{
    /// <summary>
    /// Interface for ClickUp Task Checklists Service.
    /// Provides methods for managing checklists and checklist items within tasks.
    /// </summary>
    public interface ITaskChecklistService
    {
        /// <summary>
        /// Add a new checklist to a task.
        /// </summary>
        /// <param name="taskId">The ID of the task to add the checklist to.</param>
        /// <param name="request">The request object containing details for the new checklist.</param>
        /// <param name="customTaskIds">Optional. If true, <paramref name="taskId"/> refers to a custom task ID. <paramref name="teamId"/> must be provided if this is true.</param>
        /// <param name="teamId">Optional. The ID of the team (Workspace) if using custom task IDs.</param>
        /// <param name="cancellationToken">An optional token to cancel the operation.</param>
        /// <returns>A task that represents the asynchronous operation. The task result contains the created <see cref="ChecklistModel"/>.</returns>
        /// <remarks>
        /// Corresponds to the ClickUp API operation <c>CreateChecklist</c> (<c>POST /v2/task/{task_id}/checklist</c>).
        /// </remarks>
        Task<ChecklistModel> CreateChecklistAsync(string taskId, CreateChecklistRequest request, bool? customTaskIds = null, double? teamId = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Rename a task checklist, or reorder a checklist.
        /// </summary>
        /// <param name="checklistId">The ID of the checklist to edit.</param>
        /// <param name="request">The request object containing the updated checklist details.</param>
        /// <param name="cancellationToken">An optional token to cancel the operation.</param>
        /// <returns>A task that represents the asynchronous operation.</returns>
        /// <remarks>
        /// Corresponds to the ClickUp API operation <c>EditChecklist</c> (<c>PUT /v2/checklist/{checklist_id}</c>).
        /// </remarks>
        Task EditChecklistAsync(string checklistId, EditChecklistRequest request, CancellationToken cancellationToken = default);

        /// <summary>
        /// Delete a checklist from a task.
        /// </summary>
        /// <param name="checklistId">The ID of the checklist to delete.</param>
        /// <param name="cancellationToken">An optional token to cancel the operation.</param>
        /// <returns>A task that represents the asynchronous operation.</returns>
        /// <remarks>
        /// Corresponds to the ClickUp API operation <c>DeleteChecklist</c> (<c>DELETE /v2/checklist/{checklist_id}</c>).
        /// </remarks>
        Task DeleteChecklistAsync(string checklistId, CancellationToken cancellationToken = default);

        /// <summary>
        /// Add a line item to a task checklist.
        /// </summary>
        /// <param name="checklistId">The ID of the checklist to add the item to.</param>
        /// <param name="request">The request object containing details for the new checklist item.</param>
        /// <param name="cancellationToken">An optional token to cancel the operation.</param>
        /// <returns>A task that represents the asynchronous operation. The task result contains the created <see cref="ChecklistItemModel"/>.</returns>
        /// <remarks>
        /// Corresponds to the ClickUp API operation <c>CreateChecklistItem</c> (<c>POST /v2/checklist/{checklist_id}/checklist_item</c>).
        /// </remarks>
        Task<ChecklistItemModel> CreateChecklistItemAsync(string checklistId, CreateChecklistItemRequest request, CancellationToken cancellationToken = default);

        /// <summary>
        /// Update an individual line item in a task checklist.
        /// </summary>
        /// <param name="checklistId">The ID of the checklist containing the item.</param>
        /// <param name="checklistItemId">The ID of the checklist item to edit.</param>
        /// <param name="request">The request object containing the updated checklist item details.</param>
        /// <param name="cancellationToken">An optional token to cancel the operation.</param>
        /// <returns>A task that represents the asynchronous operation. The task result contains the updated <see cref="ChecklistItemModel"/>.</returns>
        /// <remarks>
        /// Corresponds to the ClickUp API operation <c>EditChecklistItem</c> (<c>PUT /v2/checklist/{checklist_id}/checklist_item/{checklist_item_id}</c>).
        /// </remarks>
        Task<ChecklistItemModel> EditChecklistItemAsync(string checklistId, string checklistItemId, EditChecklistItemRequest request, CancellationToken cancellationToken = default);

        /// <summary>
        /// Delete a line item from a task checklist.
        /// </summary>
        /// <param name="checklistId">The ID of the checklist containing the item.</param>
        /// <param name="checklistItemId">The ID of the checklist item to delete.</param>
        /// <param name="cancellationToken">An optional token to cancel the operation.</param>
        /// <returns>A task that represents the asynchronous operation.</returns>
        /// <remarks>
        /// Corresponds to the ClickUp API operation <c>DeleteChecklistItem</c> (<c>DELETE /v2/checklist/{checklist_id}/checklist_item/{checklist_item_id}</c>).
        /// </remarks>
        Task DeleteChecklistItemAsync(string checklistId, string checklistItemId, CancellationToken cancellationToken = default);
    }
}
