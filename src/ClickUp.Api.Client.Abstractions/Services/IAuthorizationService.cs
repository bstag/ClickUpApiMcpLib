//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using ClickUp.Api.Client.Models; // Added for ClickUpWorkspace
using ClickUp.Api.Client.Models.Entities;
using ClickUp.Api.Client.Models.Entities.Users; // For User and Workspace DTOs
using ClickUp.Api.Client.Models.ResponseModels.Authorization;

// Corrected namespace
namespace ClickUp.Api.Client.Abstractions.Services
{
    /// <summary>
    /// Interface for ClickUp Authorization Service.
    /// Provides methods for OAuth 2.0 authentication and retrieving authorized user and team information.
    /// </summary>
    public interface IAuthorizationService
    {
        /// <summary>
        /// Exchanges an authorization code for an access token.
        /// </summary>
        /// <param name="clientId">OAuth app client ID.</param>
        /// <param name="clientSecret">OAuth app client secret.</param>
        /// <param name="code">Authorization code received from redirect.</param>
        /// <param name="cancellationToken">Cancellation token.</param>
        /// <returns>A task that represents the asynchronous operation. The task result contains the <see cref="GetAccessTokenResponse"/>.</returns>
        /// <exception cref="System.ArgumentNullException">Thrown if <paramref name="clientId"/>, <paramref name="clientSecret"/>, or <paramref name="code"/> is null or empty/whitespace.</exception>
        /// <exception cref="ClickUp.Api.Client.Models.Exceptions.ClickUpApiException">Thrown if the API call fails, e.g., due to invalid credentials or an expired/invalid code. Common derived types include <see cref="ClickUp.Api.Client.Models.Exceptions.ClickUpApiAuthenticationException"/> or <see cref="ClickUp.Api.Client.Models.Exceptions.ClickUpApiRequestException"/>.</exception>
        Task<GetAccessTokenResponse> GetAccessTokenAsync(
            string clientId,
            string clientSecret,
            string code,
            CancellationToken cancellationToken = default);

        /// <summary>
        /// Retrieves the details of the authenticated user.
        /// </summary>
        /// <param name="cancellationToken">Cancellation token.</param>
        /// <returns>A task that represents the asynchronous operation. The task result contains the authorized <see cref="User"/>'s details.</returns>
        /// <exception cref="ClickUp.Api.Client.Models.Exceptions.ClickUpApiAuthenticationException">Thrown if the current session is not authenticated (e.g., missing or invalid API token).</exception>
        /// <exception cref="ClickUp.Api.Client.Models.Exceptions.ClickUpApiException">Thrown if the API call fails for other reasons. See inner exception and properties for details.</exception>
        Task<User> GetAuthorizedUserAsync(CancellationToken cancellationToken = default);

        /// <summary>
        /// Retrieves the Workspaces (Teams) available to the authenticated user.
        /// </summary>
        /// <param name="cancellationToken">Cancellation token.</param>
        /// <returns>A task that represents the asynchronous operation. The task result contains a list of authorized <see cref="ClickUpWorkspace"/> objects.</returns>
        /// <exception cref="ClickUp.Api.Client.Models.Exceptions.ClickUpApiAuthenticationException">Thrown if the current session is not authenticated (e.g., missing or invalid API token).</exception>
        /// <exception cref="ClickUp.Api.Client.Models.Exceptions.ClickUpApiException">Thrown if the API call fails for other reasons. See inner exception and properties for details.</exception>
        Task<IEnumerable<ClickUpWorkspace>> GetAuthorizedWorkspacesAsync(CancellationToken cancellationToken = default);
    }
}
